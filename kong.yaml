version: '3'
services:
# 迁移Kong的postgres数据库
  db:
    hostname: kong-postgres
    container_name: kong-postgres
    image: postgres:9.6
    environment:
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
      - POSTGRES_USER=kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      devops:
        ipv4_address: 172.21.21.202
    volumes:
      - /opt/data/apps/kong/postgresql/data:/var/lib/postgresql/data

# 创建用于数据库初始化的独立容器
  kong-migrations:
    hostname: kong-migrations
    container_name: kong-migrations
    image: kong:latest
    command: kong migrations bootstrap
    depends_on:
      db:
        condition: service_healthy
    environment:
      - KONG_CASSANDRA_CONTACT_POINTS=db
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=db
      - KONG_PG_PASSWORD=kong
      - KONG_PG_USER=kong
    links:
      - db:db
    networks:
      - 'devops'
    restart: on-failure
# 创建Kong容器
  kong:
    hostname: kong-nginx
    container_name: kong-nginx
    image: kong:latest
    depends_on:
      db:
        condition: service_healthy
    environment:
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_CASSANDRA_CONTACT_POINTS=db
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=db
      - KONG_PG_PASSWORD=kong
      - KONG_PG_USER=kong
    links:
      - db:db
    networks:
      devops:
        ipv4_address: 172.21.21.201
    ports:
      - "8000:8000/tcp"     # 用以监听HTTP协议的消费接口，实现用户请求的接入。
    #   - "8001:8001/tcp"   # 用以监听HTTP协议的管理接口，此处关闭外部访问
      - "8443:8443/tcp"     # 用以监听HTTPS协议的消费接口，实现用户请求的接入。
    #   - "8444:8444/tcp"   # 用以监听HTTPS协议的管理接口，此处关闭外部访问
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

# 迁移Konga的postgres数据库
  konga-migrations:
    hostname: konga-migrations
    container_name: konga-migrations
    image: pantsel/konga
    command: -c prepare -a postgres -u postgresql://kong:kong@kong-postgres:5432/konga
    depends_on:
      db:
        condition: service_healthy
    links:
      - db:db
    networks:
      - 'devops'
    restart: on-failure
    
  konga:
    hostname: konga
    container_name: konga
    image: pantsel/konga
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_ADAPTER=postgres
      - DB_HOST=db
      - DB_USER=kong
      - DB_PASSWORD=kong
      - DB_DATABASE=konga
      - NODE_ENV=production
    links:
      - db:db
    ports:
      - "8337:1337/tcp"
    networks:
      - 'devops'

networks:
  devops:
    external: true  